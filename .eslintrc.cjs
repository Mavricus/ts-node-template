module.exports = {
  env: {
    es2020: true,
    jest: true,
    node: true,
  },
  extends: [
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:import/recommended',
    'plugin:import/typescript',
    'airbnb-typescript/base',
    'plugin:prettier/recommended',
    'plugin:eslint-comments/recommended',
    'plugin:security/recommended',
  ],
  ignorePatterns: ['.eslintrc.js', 'dist', 'data'],
  overrides: [
    {
      files: ['*.spec.ts', '*.e2e-spec.ts', 'test/asserts/*'],
      rules: {
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        'no-magic-numbers': 'off',
      },
    },
    {
      files: ['*.mock.ts'],
      rules: {
        '@typescript-eslint/no-unused-vars': 'off',
        'import/no-extraneous-dependencies': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
      },
    },
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  plugins: ['@typescript-eslint/eslint-plugin'],
  root: true,
  rules: {
    'eslint-comments/no-use': 'warn',
    'eslint-comments/no-unused-disable': 'error',
    '@typescript-eslint/explicit-function-return-type': 'warn',
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    '@typescript-eslint/interface-name-prefix': 'off',
    '@typescript-eslint/member-ordering': 'warn',
    '@typescript-eslint/no-empty-function': 'error',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/no-floating-promises': 'error',
    '@typescript-eslint/unbound-method': 'off',
    'array-callback-return': 'error',
    'arrow-body-style': [
      'error',
      'as-needed',
      {
        requireReturnForObjectLiteral: true,
      },
    ],
    'arrow-parens': [2, 'always'],
    'arrow-spacing': 'error',
    'block-spacing': 'error',
    'class-methods-use-this': 'off',
    'comma-dangle': [
      'error',
      {
        arrays: 'always-multiline',
        exports: 'always-multiline',
        functions: 'always-multiline',
        imports: 'always-multiline',
        objects: 'always-multiline',
      },
    ],
    'comma-spacing': ['error', { before: false, after: true }],
    'computed-property-spacing': ['error', 'never'],
    'curly': 'error',
    'default-case': 'error',
    'default-case-last': 'error',
    'eol-last': 'error',
    'eqeqeq': ['error', 'always', { ['null']: 'ignore' }],
    'for-direction': 'error',
    'func-call-spacing': ['error', 'never'],
    'function-call-argument-newline': ['error', 'consistent'],
    'implicit-arrow-linebreak': 'off',
    'import/no-default-export': 'error',
    'import/order': 'error',
    'import/prefer-default-export': 'off',
    'keyword-spacing': 'error',
    'max-classes-per-file': 'error',
    'max-depth': ['error', 4],
    'max-params': ['error', 5],
    'newline-per-chained-call': ['error', { ignoreChainWithDepth: 2 }],
    'no-await-in-loop': 'off',
    'no-fallthrough': 'error',
    'no-constant-binary-expression': 'error',
    'no-continue': 'error',
    'no-cond-assign': ['error', 'always'],
    'no-duplicate-case': 'error',
    'no-dupe-else-if': 'error',
    'no-else-return': 'error',
    'no-lonely-if': 'error',
    'no-magic-numbers': ['error', { ignore: [0, 1, -1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 25, 30, 50, 60, 100, 500, 1000] }],
    'no-multi-spaces': 'error',
    'no-negated-condition': 'error',
    'no-nested-ternary': 'error',
    'no-return-await': 'error',
    'no-sequences': 'error',
    'no-template-curly-in-string': 'error',
    'no-unneeded-ternary': ['error', { defaultAssignment: false }],
    'no-void': 'error',
    'no-with': 'error',
    'object-curly-spacing': ['error', 'always'],
    'one-var': ['error', 'never'],
    'prefer-arrow-callback': 'error',
    'prefer-promise-reject-errors': 'error',
    'require-atomic-updates': 'warn',
    'require-await': 'error',
    'rest-spread-spacing': ['error', 'never'],
    'semi-spacing': 'error',
    // 'sort-keys': [
    //   'error',
    //   'asc',
    //   {
    //     caseSensitive: true,
    //     minKeys: 3,
    //     natural: false,
    //   },
    // ],
    'switch-colon-spacing': 'error',
    'template-curly-spacing': ['error', 'never'],
    'yoda': 'error',
    'no-console': 'error',
    'security/detect-unsafe-regex': 'error',
    'security/detect-buffer-noassert': 'error',
    'security/detect-child-process': 'error',
    'security/detect-eval-with-expression': 'error',
    'security/detect-no-csrf-before-method-override': 'error',
    'security/detect-non-literal-fs-filename': 'error',
    'security/detect-non-literal-regexp': 'warn',
    'security/detect-non-literal-require': 'error',
    'security/detect-object-injection': 'warn',
    'security/detect-possible-timing-attacks': 'error',
    'security/detect-pseudoRandomBytes': 'warn',
    'security/detect-new-buffer': 'error',
  },
};
